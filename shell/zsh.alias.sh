-='cd -'
...=../..
....=../../..
.....=../../../..
......=../../../../..
1='cd -'
2='cd -2'
3='cd -3'
4='cd -4'
5='cd -5'
6='cd -6'
7='cd -7'
8='cd -8'
9='cd -9'
_=sudo
aa='sudo apt install'
afind='ack -il'
ba='brew install'
bb='cd ~/Blog; open -a "/Applications/Google Chrome.app" index.html'
bbb='cd ~/Blog; open -a "/Applications/Google Chrome.app" http://hoorayitt.coding.me/blog/index'
c-='shutdown -r $1 '
cq='shutdown -r now'
e='cd /media/Document'
edit='~/blog/.edit-this-blog.sh'
ee='nohup nautilus ./ > $HOME/.nohup_out 2>&1 &'
fanqiang-HK='cp ~/MyNutStore/v2ray/HK.json ~/MyNutStore/v2ray/config.json; service v2ray restart; service v2ray status'
fanqiang-JP='cp ~/MyNutStore/v2ray/JP.json ~/MyNutStore/v2ray/config.json; service v2ray restart; service v2ray status'
fanqiang-TW='cp ~/MyNutStore/v2ray/TW.json ~/MyNutStore/v2ray/config.json; service v2ray restart; service v2ray status'
fin='find ./ -name '
fsize='du -h -d 1'
g=git
g-='shutdown -h $1 '
ga='git add'
gaa='git add --all'
gap='git apply'
gapa='git add --patch'
gau='git add --update'
gav='git add --verbose'
gb='git branch'
gbD='git branch -D'
gba='git branch -a'
gbd='git branch -d'
gbda='git branch --no-color --merged | command grep -vE "^(\*|\s*(master|develop|dev)\s*$)" | command xargs -n 1 git branch -d'
gbl='git blame -b -w'
gbnm='git branch --no-merged'
gbr='git branch --remote'
gbs='git bisect'
gbsb='git bisect bad'
gbsg='git bisect good'
gbsr='git bisect reset'
gbss='git bisect start'
gc='git commit -v'
'gc!'='git commit -v --amend'
gca='git commit -v -a'
'gca!'='git commit -v -a --amend'
gcam='git commit -a -m'
'gcan!'='git commit -v -a --no-edit --amend'
'gcans!'='git commit -v -a -s --no-edit --amend'
gcb='git checkout -b'
gcd='git checkout develop'
gcf='git config --list'
gcl='git clone --recurse-submodules'
gclean='git clean -id'
gcm='git checkout master'
gcmsg='git commit -m'
'gcn!'='git commit -v --no-edit --amend'
gco='git checkout'
gcount='git shortlog -sn'
gcp='git cherry-pick'
gcpa='git cherry-pick --abort'
gcpc='git cherry-pick --continue'
gcs='git commit -S'
gcsm='git commit -s -m'
gd='git diff'
gdca='git diff --cached'
gdct='git describe --tags $(git rev-list --tags --max-count=1)'
gdcw='git diff --cached --word-diff'
gds='git diff --staged'
gdt='git diff-tree --no-commit-id --name-only -r'
gdw='git diff --word-diff'
gf='git fetch'
gfa='git fetch --all --prune'
gfg='git ls-files | grep'
gfo='git fetch origin'
gg='shutdown -h now'
gga='git gui citool --amend'
ggpull='git pull origin "$(git_current_branch)"'
ggpur=ggu
ggpush='git push origin "$(git_current_branch)"'
ggsup='git branch --set-upstream-to=origin/$(git_current_branch)'
gh='vim ~/.vim/gitStudy.txt'
ghh='git help'
gignore='git update-index --assume-unchanged'
gignored='git ls-files -v | grep "^[[:lower:]]"'
git-svn-dcommit-push='git svn dcommit && git push github master:svntrunk'
gitstudy='vim $HOME/.local/config/gitStudy.sh'
gk='\gitk --all --branches'
gke='\gitk --all $(git log -g --pretty=%h)'
gl='git pull'
glg='git lg'
glgg='git log --graph'
glgga='git log --graph --decorate --all'
glgm='git log --graph --max-count=10'
glgp='git log --stat -p'
glo='git log --oneline --decorate'
globurl='noglob urlglobber '
glod='git log --graph --pretty='\''%Cred%h%Creset -%C(auto)%d%Creset %s %Cgreen(%ad) %C(bold blue)<%an>%Creset'\'
glods='git log --graph --pretty='\''%Cred%h%Creset -%C(auto)%d%Creset %s %Cgreen(%ad) %C(bold blue)<%an>%Creset'\'' --date=short'
glog='git log --oneline --decorate --graph'
gloga='git log --oneline --decorate --graph --all'
glol='git log --graph --pretty='\''%Cred%h%Creset -%C(auto)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset'\'
glola='git log --graph --pretty='\''%Cred%h%Creset -%C(auto)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset'\'' --all'
glols='git log --graph --pretty='\''%Cred%h%Creset -%C(auto)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset'\'' --stat'
glp=_git_log_prettily
glum='git pull upstream master'
gm='git merge'
gma='git merge --abort'
gmom='git merge origin/master'
gmt='git mergetool --no-prompt'
gmtvim='git mergetool --no-prompt --tool=vimdiff'
gmum='git merge upstream/master'
gp='git push'
gpd='git push --dry-run'
gpf='git push --force-with-lease'
'gpf!'='git push --force'
gpoat='git push origin --all && git push origin --tags'
gpristine='git reset --hard && git clean -dfx'
gpsup='git push --set-upstream origin $(git_current_branch)'
gpu='git push upstream'
gpv='git push -v'
gr='git remote'
gra='git remote add'
grb='git rebase'
grba='git rebase --abort'
grbc='git rebase --continue'
grbd='git rebase develop'
grbi='git rebase -i'
grbm='git rebase master'
grbs='git rebase --skip'
grep='grep  --color=auto --exclude-dir={.bzr,CVS,.git,.hg,.svn}'
grev='git revert'
grh='git reset'
grhh='git reset --hard'
grlg='git reflog'
grm='git rm'
grmc='git rm --cached'
grmv='git remote rename'
groh='git reset origin/$(git_current_branch) --hard'
grrm='git remote remove'
grset='git remote set-url'
grst='git reset --hard '
grt='cd "$(git rev-parse --show-toplevel || echo .)"'
gru='git reset --'
grup='git remote update'
grv='git remote -v'
gsb='git status -sb'
gsd='git svn dcommit'
gsh='git show'
gsi='git submodule init'
gsps='git show --pretty=short --show-signature'
gsr='git svn rebase'
gss='git status -s'
gst='git status'
gsta='git stash push'
gstaa='git stash apply'
gstall='git stash --all'
gstc='git stash clear'
gstd='git stash drop'
gstl='git stash list'
gstp='git stash pop'
gsts='git stash show --text'
gsu='git submodule update'
gtl='gtl(){ git tag --sort=-v:refname -n -l ${1}* }; noglob gtl'
gts='git tag -s'
gtv='git tag | sort -V'
gunignore='git update-index --no-assume-unchanged'
gunwip='git log -n 1 | grep -q -c "\-\-wip\-\-" && git reset HEAD~1'
gup='git pull --rebase'
gupa='git pull --rebase --autostash'
gupav='git pull --rebase --autostash -v'
gupv='git pull --rebase -v'
gwch='git whatchanged -p --abbrev-commit --pretty=medium'
gwip='git add -A; git rm $(git ls-files --deleted) 2> /dev/null; git commit --no-verify --no-gpg-sign -m "--wip-- [skip ci]"'
h=tldr
history=omz_history
ignore='vim .gitignore'
j='cd /home/itt/Coding/QtCoding/ComeOnBoy/'
jc='f=`cat $HOME/.last-vim-list/last-cpp`; cd ${f%/*}'
jj='/home/itt/Coding/QtCoding/sendData/TcpClient &'
jk='mycli -h localhost -u root -p 123456'
jm='f=`cat $HOME/.last-vim-list/last-md`; cd ${f%/*}'
jn='f=`cat $HOME/.last-vim-list/last-note`; cd ${f%/*}'
jp='f=`cat $HOME/.last-vim-list/last-py`; cd ${f%/*}'
jpt='jupyter notebook'
ki='pkill -9 $1'
l='ls -lah'
la='ls -lAh'
list='vim ./*.list'
ll='ls -lh'
ls='ls --color=tty'
lsa='ls -lah'
md='vim ~/MyNutStore/Notes'
ml='cd ML; ls -1'
mv='mv -i'
na='npm install'
null='cp ~/.local/config/.vimrc_null ~/.vimrc; echo "vim快捷版"'
pa='pip install'
pp=ipython
qx='shutdown -c'
rclear='/bin/rm -rf ~/.trash/*'
rd=rmdir
rl='l ~/.trash'
rm=trash
s='$HOME/.local/config/search_and_record.sh'
someFunction='vi ~/.local/config/shellFunction.sh'
study='vim ~/.local/config/bash.sh'
studyCppSTL='vim /home/itt/Coding/CppCoding/csp/golden.cpp'
studyShell2='vim ~/.local/config/bash-handbook.md'
szsh='source ~/.zshrc'
tim-er='/home/itt/Coding/QtRelease/send_to_tim.app/send_to_tim.sh &'
tt='dosbox /home/itt/DOSBox/tt.exe  &'
vim=/home/itt/SoftWare/nvim.appimage
vimc='vim `cat $HOME/.last-vim-list/last-cpp`'
vimm='vim `cat $HOME/.last-vim-list/last-md`'
vimp='vim `cat $HOME/.last-vim-list/last-py`'
vimrc='vim ~/.config/nvim/init.vim'
vimrc_null='vim  ~/.local/config/.vimrc_null'
vimrc_ycm='vim  ~/.local/config/.vimrc_ycm'
which-command=whence
words='vim ~/.words'
writeBlog='cd ~/blog; ./.new-a-blog.sh'
xx='chmod +x $1'
ycm='cp ~/.local/config/.vimrc_ycm ~/.vimrc; echo "vim完整版"'
z=_zlua
zb='z -b'
zshrc='vim ~/.local/config/.zshrc'
