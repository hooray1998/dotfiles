"=================================================================
"		一些配置文件       
"=================================================================
" Vim-plug 插件管理       
source $HOME/.local/config/PlugList.vimrc
" 基本设置
source $HOME/.local/config/basic.vimrc
" 注册alt键
source $HOME/.local/config/alt.vimrc
" 自定义函数
source $HOME/.local/config/myFunction.vimrc
" Plugs
source $HOME/.local/config/pluginSetting.vimrc
" Notes， Python, Markdown
source $HOME/.local/config/python_markdown.vimrc
" html， Css
source $HOME/.local/config/web.vimrc



"===============================================================
"    NOTE:  常用键盘快捷键
"===============================================================

"设置<Space>为空格键
"let mapleader="\<Space>"

"快速遍历缓冲区"
noremap <silent> <Tab> :bn<CR>
noremap <silent> <S-Tab> :bp<CR>

"映射显示当前文件目录的快捷键"
cnoremap <expr> %% getcmdtype( ) == ':' ? expand('%:h').'/' : '%%'

"插入&&命令模式下上下左右
"需要设置终端，Del发送Esc序列，Backspace发送ASCII Del
inoremap <C-h> <left>
"inoremap <C-j> <C-n>
"inoremap <C-k> <C-p>
inoremap <C-l> <right>
inoremap <c-a> <Home>
inoremap <c-e> <End>
cnoremap <c-h> <left>
cnoremap <c-j> <down>
cnoremap <c-k> <up>
cnoremap <c-l> <right>
cnoremap <c-a> <Home>
cnoremap <c-e> <End>

"H,L移动到行首行尾
map H ^
map L $
"可视模式下移动到行尾
vnoremap L $h

"保存文件
nnoremap <Space>w :w<CR>
nnoremap <Space>W :w !sudo tee % > /dev/null <CR>
nnoremap <Space>i :bd %<CR><CR>
nnoremap <Space>e :exit<CR>
"快捷复制粘贴至系统
nnoremap <C-A> ggVG"+y<CR>
"nnoremap <Space>v :r !pbpaste<CR>
"vnoremap <Space>c :w !pbcopy<CR><CR>
nnoremap <Space>v "+p
vnoremap <Space>y "+y
"打开文件管理器
nnoremap <C-t> :tabnew .<CR>5j
nnoremap <Space>, gT
nnoremap <Space>. gt
nnoremap <Space>f :Files ~<CR>
nnoremap <silent> <Space>b :Buffers<CR>
nnoremap <silent> <Space>l :Lines<CR>

"运行cpp  和 python, 先清屏
nnoremap <Space>r :call RunCoding()<CR>
nnoremap <Space>R :call AsyncRunCoding()<CR>

"C-l 清除高亮
nnoremap <silent> <C-l> :<C-u>nohlsearch<CR><C-l>

" 重定义*, 使其那能够搜索选中文本
xnoremap * : <C-u> call <SID>VSetSearch()<CR>/<C-R>=@/<CR><CR>
xnoremap # : <C-u> call <SID>VSetSearch()<CR>?<C-R>=@/<CR><CR>

"比较文件  
nnoremap <C-F4> :vert diffsplit 

"C,C++的调试
nnoremap <C-F5> :call Rungdb()<CR>

"F8开启和关闭树"
map <F8> :NERDTreeToggle<CR>
nnoremap <Space>]  :call JumpToCSS()<CR>

" 设置 F10 打开/关闭 Quickfix 窗口
nnoremap <F10> :call asyncrun#quickfix_toggle(6)<cr>

"切换头/源文件
noremap <M-x> :A<CR>
"增加说明
nnoremap <M-p> :call SetComment()<CR>

"快速代码注释
map <F7> <leader>ci <CR>  

nnoremap <Space>p Iprint($a)^j
nnoremap <Space>P Iprint("$a")^j

"查看函数定义
nnoremap <F9> :LeaderfFunction!<CR>
nnoremap <C-k> :LeaderfFunction!<CR>

"快速跳转错误
nmap <M-k> <Plug>(ale_previous_wrap)
nmap <M-j> <Plug>(ale_next_wrap)
"<Space>s触发/关闭语法检查
nmap <M-s> :ALEToggle<CR>
"<Space>d查看错误或警告的详细信息
nmap <M-d> :ALEDetail<CR>

" 设置分号自动折叠
nnoremap ; @=((foldclosed(line('.'))<0)?'zc':'zo')<CR>

" 自动生成Markdown目录
function MakeContext()
	.normal :g/\v^[^#]*$/d
	.normal ggyGugggPk
	exec ":0,.s/# /1. /gg"
	exec ":0,.s/#/\t/gg"
	.normal ggO[目录](.)
endfunc
